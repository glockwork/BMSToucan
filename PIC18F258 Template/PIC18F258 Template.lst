;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/03/2012 11:39:46 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF32  	GOTO        100
_ISR:
;PIC18F258 Template.c,62 :: 		void ISR() iv 0x0008
0x0008	0xF015C000  	MOVFF       R0, 21
;PIC18F258 Template.c,64 :: 		if (INTCON.T0IF == 1)
0x000C	0xA4F2      	BTFSS       INTCON, 2 
0x000E	0xD00D      	BRA         L_ISR5
;PIC18F258 Template.c,66 :: 		timer_count++;
0x0010	0x4A17      	INFSNZ      _timer_count, 1 
0x0012	0x2A18      	INCF        _timer_count+1, 1 
;PIC18F258 Template.c,67 :: 		if (timer_count > MAX_OVERFLOWS)
0x0014	0x5018      	MOVF        _timer_count+1, 0 
0x0016	0x0800      	SUBLW       0
0x0018	0xE102      	BNZ         L__ISR14
0x001A	0x5017      	MOVF        _timer_count, 0 
0x001C	0x084C      	SUBLW       76
L__ISR14:
0x001E	0xE204      	BC          L_ISR6
;PIC18F258 Template.c,69 :: 		flag_timer_overflow = 0xFF;
0x0020	0x0EFF      	MOVLW       255
0x0022	0x6E16      	MOVWF       _flag_timer_overflow 
;PIC18F258 Template.c,70 :: 		timer_count = 0;
0x0024	0x6A17      	CLRF        _timer_count 
0x0026	0x6A18      	CLRF        _timer_count+1 
;PIC18F258 Template.c,71 :: 		}
L_ISR6:
;PIC18F258 Template.c,72 :: 		INTCON.T0IF = 0;
0x0028	0x94F2      	BCF         INTCON, 2 
;PIC18F258 Template.c,73 :: 		}
L_ISR5:
;PIC18F258 Template.c,74 :: 		}
L_end_ISR:
L__ISR13:
0x002A	0xF000C015  	MOVFF       21, R0
0x002E	0x0011      	RETFIE      1
; end of _ISR
_interrupt_setup:
;PIC18F258 Template.c,53 :: 		void interrupt_setup()
;PIC18F258 Template.c,56 :: 		INTCON.GIE = 1;    // enable global interrupts
0x0030	0x8EF2      	BSF         INTCON, 7 
;PIC18F258 Template.c,57 :: 		INTCON.TMR0IE = 1; // enable timer 0 interrupts
0x0032	0x8AF2      	BSF         INTCON, 5 
;PIC18F258 Template.c,58 :: 		INTCON2.TMR0IP = 1; // TMR0 interrupts are high priority
0x0034	0x84F1      	BSF         INTCON2, 2 
;PIC18F258 Template.c,59 :: 		}
L_end_interrupt_setup:
0x0036	0x0012      	RETURN      0
; end of _interrupt_setup
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0038	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x003A	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x003E	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0040	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0042	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0044	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0046	0x0012      	RETURN      0
; end of ___CC2DW
_setup:
;PIC18F258 Template.c,28 :: 		void setup()
;PIC18F258 Template.c,31 :: 		TRISA = 0;
0x0048	0x6A92      	CLRF        TRISA 
;PIC18F258 Template.c,32 :: 		TRISB = 0;
0x004A	0x6A93      	CLRF        TRISB 
;PIC18F258 Template.c,33 :: 		TRISC = 0;
0x004C	0x6A94      	CLRF        TRISC 
;PIC18F258 Template.c,36 :: 		T0CON.TMR0ON = 1; // turn on timer 0
0x004E	0x8ED5      	BSF         T0CON, 7 
;PIC18F258 Template.c,37 :: 		T0CON.T08BIT = 1; // set up as an 8 bit timer
0x0050	0x8CD5      	BSF         T0CON, 6 
;PIC18F258 Template.c,38 :: 		T0CON.T0CS = 0; // use instruction clock cycle as the timing signal, not TOCKI
0x0052	0x9AD5      	BCF         T0CON, 5 
;PIC18F258 Template.c,39 :: 		T0CON.PSA = 0; // use the prescaler
0x0054	0x96D5      	BCF         T0CON, 3 
;PIC18F258 Template.c,40 :: 		T0CON |= 0b00000111; // set the prescaler to 1:256 this gives us an
0x0056	0x0E07      	MOVLW       7
0x0058	0x12D5      	IORWF       T0CON, 1 
;PIC18F258 Template.c,45 :: 		interrupt_setup();
0x005A	0xDFEA      	RCALL       _interrupt_setup
;PIC18F258 Template.c,48 :: 		flag_timer_overflow = 0;
0x005C	0x6A16      	CLRF        _flag_timer_overflow 
;PIC18F258 Template.c,49 :: 		timer_count = 0;
0x005E	0x6A17      	CLRF        _timer_count 
0x0060	0x6A18      	CLRF        _timer_count+1 
;PIC18F258 Template.c,50 :: 		}
L_end_setup:
0x0062	0x0012      	RETURN      0
; end of _setup
_main:
;PIC18F258 Template.c,13 :: 		void main() {
;PIC18F258 Template.c,14 :: 		setup();
0x0064	0xDFF1      	RCALL       _setup
;PIC18F258 Template.c,15 :: 		interrupt_setup();
0x0066	0xDFE4      	RCALL       _interrupt_setup
;PIC18F258 Template.c,16 :: 		PORTC.B6 = 1;
0x0068	0x8C82      	BSF         PORTC, 6 
;PIC18F258 Template.c,17 :: 		while(1)
L_main0:
;PIC18F258 Template.c,19 :: 		if(flag_timer_overflow == 0xFF)
0x006A	0x5016      	MOVF        _flag_timer_overflow, 0 
0x006C	0x0AFF      	XORLW       255
0x006E	0xE10C      	BNZ         L_main2
;PIC18F258 Template.c,21 :: 		PORTC.B6 = (PORTC.B6 == 1) ? 0 : 1;
0x0070	0xAC82      	BTFSS       PORTC, 6 
0x0072	0xD002      	BRA         L_main3
0x0074	0x6A00      	CLRF        R0 
0x0076	0xD002      	BRA         L_main4
L_main3:
0x0078	0x0E01      	MOVLW       1
0x007A	0x6E00      	MOVWF       R0 
L_main4:
0x007C	0xB000      	BTFSC       R0, 0 
0x007E	0xD002      	BRA         L__main8
0x0080	0x9C82      	BCF         PORTC, 6 
0x0082	0xD001      	BRA         L__main9
L__main8:
0x0084	0x8C82      	BSF         PORTC, 6 
L__main9:
;PIC18F258 Template.c,22 :: 		flag_timer_overflow = 0;
0x0086	0x6A16      	CLRF        _flag_timer_overflow 
;PIC18F258 Template.c,23 :: 		}
L_main2:
;PIC18F258 Template.c,24 :: 		};
0x0088	0xD7F0      	BRA         L_main0
;PIC18F258 Template.c,25 :: 		}
L_end_main:
0x008A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [40]    _ISR
0x0030       [8]    _interrupt_setup
0x0038      [16]    ___CC2DW
0x0048      [28]    _setup
0x0064      [40]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    R1
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [1]    R2
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    __Lib_CAN_C_A_CANIDToRegs_loVal_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0004       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [1]    __Lib_CAN_C_A_CANIDToRegs_hiVal_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    __Lib_CAN_C_A_CANIDToRegs_hrVal_L0
0x0005       [1]    R5
0x0006       [1]    __Lib_CAN_C_A_CANIDToRegs_hsVal_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _flag_timer_overflow
0x0017       [2]    _timer_count
0x0F82       [1]    PORTC
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0FD5       [1]    T0CON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_ISR5
  L_ISR6
  L_end_main
  _main
  L__main8
  L__main9
  L_end_setup
  _setup
  L_end_interrupt_setup
  _interrupt_setup
  L_end_ISR
  _ISR
  L__ISR13
  L__ISR14
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_ISR5
  L_ISR6
  L_end_main
  _main
  L__main8
  L__main9
  L_end_setup
  _setup
  L_end_interrupt_setup
  _interrupt_setup
  L_end_ISR
  _ISR
  L__ISR13
  L__ISR14
