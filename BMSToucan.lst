;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/03/2012 11:43:07 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF57  	GOTO        686
_ISR:
;BMSToucan.c,190 :: 		void ISR() iv 0x0008
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;BMSToucan.c,195 :: 		if (INTCON3.INT1IF == 1)
0x0010	0xA0F0      	BTFSS       INTCON3, 0 
0x0012	0xD004      	BRA         L_ISR13
;BMSToucan.c,197 :: 		flag_ovp = 1;
0x0014	0x0E01      	MOVLW       1
0x0016	0x6E43      	MOVWF       _flag_ovp 
;BMSToucan.c,198 :: 		INTCON3.INT1IF = 0; // reset the interrupt flag to prevent looping
0x0018	0x90F0      	BCF         INTCON3, 0 
;BMSToucan.c,199 :: 		}
0x001A	0xD01D      	BRA         L_ISR14
L_ISR13:
;BMSToucan.c,200 :: 		else if (INTCON.INT0IF == 1)
0x001C	0xA2F2      	BTFSS       INTCON, 1 
0x001E	0xD004      	BRA         L_ISR15
;BMSToucan.c,203 :: 		flag_lvp = 1;
0x0020	0x0E01      	MOVLW       1
0x0022	0x6E45      	MOVWF       _flag_lvp 
;BMSToucan.c,204 :: 		INTCON.INT0IF = 0; // reset the interrupt flag to prevent looping
0x0024	0x92F2      	BCF         INTCON, 1 
;BMSToucan.c,205 :: 		}
0x0026	0xD017      	BRA         L_ISR16
L_ISR15:
;BMSToucan.c,206 :: 		else if (INTCON.T0IF == 1)
0x0028	0xA4F2      	BTFSS       INTCON, 2 
0x002A	0xD015      	BRA         L_ISR17
;BMSToucan.c,209 :: 		tx_counter++;
0x002C	0x0E01      	MOVLW       1
0x002E	0x2439      	ADDWF       _tx_counter, 0 
0x0030	0x6E00      	MOVWF       R0 
0x0032	0x0E00      	MOVLW       0
0x0034	0x203A      	ADDWFC      _tx_counter+1, 0 
0x0036	0x6E01      	MOVWF       R1 
0x0038	0xF039C000  	MOVFF       R0, _tx_counter
0x003C	0xF03AC001  	MOVFF       R1, _tx_counter+1
;BMSToucan.c,210 :: 		if(tx_counter > COUNTER_OVERFLOW)
0x0040	0x503A      	MOVF        _tx_counter+1, 0 
0x0042	0x0800      	SUBLW       0
0x0044	0xE102      	BNZ         L__ISR26
0x0046	0x5039      	MOVF        _tx_counter, 0 
0x0048	0x0826      	SUBLW       38
L__ISR26:
0x004A	0xE204      	BC          L_ISR18
;BMSToucan.c,212 :: 		flag_check_bms = 1;
0x004C	0x0E01      	MOVLW       1
0x004E	0x6E44      	MOVWF       _flag_check_bms 
;BMSToucan.c,213 :: 		tx_counter = 0;
0x0050	0x6A39      	CLRF        _tx_counter 
0x0052	0x6A3A      	CLRF        _tx_counter+1 
;BMSToucan.c,214 :: 		}
L_ISR18:
;BMSToucan.c,215 :: 		INTCON.T0IF = 0; // reset the TMR0 interrupt flag
0x0054	0x94F2      	BCF         INTCON, 2 
;BMSToucan.c,216 :: 		}
L_ISR17:
L_ISR16:
L_ISR14:
;BMSToucan.c,217 :: 		}
L_end_ISR:
L__ISR25:
0x0056	0xF000C016  	MOVFF       22, R0
0x005A	0xF001C015  	MOVFF       21, R1
0x005E	0x0011      	RETFIE      1
; end of _ISR
__Lib_CAN_C_A_CANIDToRegs:
;__Lib_CAN_C_A.c,191 :: 		
;__Lib_CAN_C_A.c,193 :: 		
0x0060	0xF003C055  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_val, R3
;__Lib_CAN_C_A.c,194 :: 		
0x0064	0xF004C056  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_val+1, R4
;__Lib_CAN_C_A.c,195 :: 		
0x0068	0xF005C057  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_val+2, R5
;__Lib_CAN_C_A.c,196 :: 		
0x006C	0xF006C058  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_val+3, R6
;__Lib_CAN_C_A.c,198 :: 		
0x0070	0xA659      	BTFSS       FARG___Lib_CAN_C_A_CANIDToRegs_CAN_CONFIG_FLAGS, 3 
0x0072	0xD02C      	BRA         L___Lib_CAN_C_A_CANIDToRegs0
;__Lib_CAN_C_A.c,200 :: 		
0x0074	0xF002C003  	MOVFF       R3, R2
0x0078	0x3202      	RRCF        R2, 1 
0x007A	0x9E02      	BCF         R2, 7 
0x007C	0x3202      	RRCF        R2, 1 
0x007E	0x9E02      	BCF         R2, 7 
0x0080	0x3202      	RRCF        R2, 1 
0x0082	0x9E02      	BCF         R2, 7 
0x0084	0x0E05      	MOVLW       5
0x0086	0x6E01      	MOVWF       R1 
0x0088	0xF000C004  	MOVFF       R4, R0
0x008C	0x5001      	MOVF        R1, 0 
L___Lib_CAN_C_A_CANIDToRegs55:
0x008E	0xE004      	BZ          L___Lib_CAN_C_A_CANIDToRegs56
0x0090	0x3600      	RLCF        R0, 1 
0x0092	0x9000      	BCF         R0, 0 
0x0094	0x0FFF      	ADDLW       255
0x0096	0xD7FB      	BRA         L___Lib_CAN_C_A_CANIDToRegs55
L___Lib_CAN_C_A_CANIDToRegs56:
0x0098	0xFFE1C053  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr, FSR1
0x009C	0xFFE2C054  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, FSR1H
0x00A0	0x5000      	MOVF        R0, 0 
0x00A2	0x1002      	IORWF       R2, 0 
0x00A4	0x6EE6      	MOVWF       POSTINC1 
;__Lib_CAN_C_A.c,202 :: 		
0x00A6	0x4A53      	INFSNZ      FARG___Lib_CAN_C_A_CANIDToRegs_ptr, 1 
0x00A8	0x2A54      	INCF        FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, 1 
;__Lib_CAN_C_A.c,203 :: 		
0x00AA	0x0E05      	MOVLW       5
0x00AC	0x6E01      	MOVWF       R1 
0x00AE	0xF000C003  	MOVFF       R3, R0
0x00B2	0x5001      	MOVF        R1, 0 
L___Lib_CAN_C_A_CANIDToRegs57:
0x00B4	0xE004      	BZ          L___Lib_CAN_C_A_CANIDToRegs58
0x00B6	0x3600      	RLCF        R0, 1 
0x00B8	0x9000      	BCF         R0, 0 
0x00BA	0x0FFF      	ADDLW       255
0x00BC	0xD7FB      	BRA         L___Lib_CAN_C_A_CANIDToRegs57
L___Lib_CAN_C_A_CANIDToRegs58:
0x00BE	0xFFE1C053  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr, FSR1
0x00C2	0xFFE2C054  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, FSR1H
0x00C6	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_CAN_C_A.c,204 :: 		
0x00CA	0xD042      	BRA         L___Lib_CAN_C_A_CANIDToRegs1
L___Lib_CAN_C_A_CANIDToRegs0:
;__Lib_CAN_C_A.c,207 :: 		
0x00CC	0x0E05      	MOVLW       5
0x00CE	0x6E00      	MOVWF       R0 
0x00D0	0xF002C005  	MOVFF       R5, R2
0x00D4	0x5000      	MOVF        R0, 0 
L___Lib_CAN_C_A_CANIDToRegs59:
0x00D6	0xE004      	BZ          L___Lib_CAN_C_A_CANIDToRegs60
0x00D8	0x3202      	RRCF        R2, 1 
0x00DA	0x9E02      	BCF         R2, 7 
0x00DC	0x0FFF      	ADDLW       255
0x00DE	0xD7FB      	BRA         L___Lib_CAN_C_A_CANIDToRegs59
L___Lib_CAN_C_A_CANIDToRegs60:
0x00E0	0xF000C006  	MOVFF       R6, R0
0x00E4	0x3600      	RLCF        R0, 1 
0x00E6	0x9000      	BCF         R0, 0 
0x00E8	0x3600      	RLCF        R0, 1 
0x00EA	0x9000      	BCF         R0, 0 
0x00EC	0x3600      	RLCF        R0, 1 
0x00EE	0x9000      	BCF         R0, 0 
0x00F0	0xFFE1C053  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr, FSR1
0x00F4	0xFFE2C054  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, FSR1H
0x00F8	0x5000      	MOVF        R0, 0 
0x00FA	0x1002      	IORWF       R2, 0 
0x00FC	0x6EE6      	MOVWF       POSTINC1 
;__Lib_CAN_C_A.c,209 :: 		
0x00FE	0x4A53      	INFSNZ      FARG___Lib_CAN_C_A_CANIDToRegs_ptr, 1 
0x0100	0x2A54      	INCF        FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, 1 
;__Lib_CAN_C_A.c,210 :: 		
0x0102	0xF000C005  	MOVFF       R5, R0
0x0106	0x3600      	RLCF        R0, 1 
0x0108	0x9000      	BCF         R0, 0 
0x010A	0x3600      	RLCF        R0, 1 
0x010C	0x9000      	BCF         R0, 0 
0x010E	0x3600      	RLCF        R0, 1 
0x0110	0x9000      	BCF         R0, 0 
0x0112	0x0EE0      	MOVLW       224
0x0114	0x1600      	ANDWF       R0, 1 
0x0116	0x0E08      	MOVLW       8
0x0118	0x1000      	IORWF       R0, 0 
0x011A	0x6E01      	MOVWF       R1 
0x011C	0x0E03      	MOVLW       3
0x011E	0x1405      	ANDWF       R5, 0 
0x0120	0x6E00      	MOVWF       R0 
0x0122	0xFFE1C053  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr, FSR1
0x0126	0xFFE2C054  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, FSR1H
0x012A	0x5000      	MOVF        R0, 0 
0x012C	0x1001      	IORWF       R1, 0 
0x012E	0x6EE6      	MOVWF       POSTINC1 
;__Lib_CAN_C_A.c,214 :: 		
0x0130	0x4A53      	INFSNZ      FARG___Lib_CAN_C_A_CANIDToRegs_ptr, 1 
0x0132	0x2A54      	INCF        FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, 1 
;__Lib_CAN_C_A.c,216 :: 		
0x0134	0xFFE1C053  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr, FSR1
0x0138	0xFFE2C054  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, FSR1H
0x013C	0xFFE6C004  	MOVFF       R4, POSTINC1
;__Lib_CAN_C_A.c,217 :: 		
0x0140	0x4A53      	INFSNZ      FARG___Lib_CAN_C_A_CANIDToRegs_ptr, 1 
0x0142	0x2A54      	INCF        FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, 1 
;__Lib_CAN_C_A.c,219 :: 		
0x0144	0xFFE1C053  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr, FSR1
0x0148	0xFFE2C054  	MOVFF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1, FSR1H
0x014C	0xFFE6C003  	MOVFF       R3, POSTINC1
;__Lib_CAN_C_A.c,220 :: 		
L___Lib_CAN_C_A_CANIDToRegs1:
;__Lib_CAN_C_A.c,221 :: 		
L_end_CANIDToRegs:
0x0150	0x0012      	RETURN      0
; end of __Lib_CAN_C_A_CANIDToRegs
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x0152	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x0156	0xA2AB      	BTFSS       RCSTA, 1 
0x0158	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x015A	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x015C	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x015E	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x0162	0x0012      	RETURN      0
; end of _UART1_Read
_CANWrite:
;__Lib_CAN_C_A.c,532 :: 		
;__Lib_CAN_C_A.c,538 :: 		
0x0164	0x010F      	MOVLB       15
0x0166	0xB740      	BTFSC       TXB0CON, 3, 1
0x0168	0xD004      	BRA         L_CANWrite21
;__Lib_CAN_C_A.c,540 :: 		
0x016A	0x0EF1      	MOVLW       241
0x016C	0x166F      	ANDWF       CANCON, 1 
;__Lib_CAN_C_A.c,541 :: 		
0x016E	0x866F      	BSF         CANCON, 3 
;__Lib_CAN_C_A.c,542 :: 		
0x0170	0xD00F      	BRA         L_CANWrite22
L_CANWrite21:
;__Lib_CAN_C_A.c,544 :: 		
0x0172	0xB730      	BTFSC       TXB1CON, 3, 1
0x0174	0xD005      	BRA         L_CANWrite23
;__Lib_CAN_C_A.c,546 :: 		
0x0176	0x0EF1      	MOVLW       241
0x0178	0x166F      	ANDWF       CANCON, 1 
;__Lib_CAN_C_A.c,547 :: 		
0x017A	0x0E06      	MOVLW       6
0x017C	0x126F      	IORWF       CANCON, 1 
;__Lib_CAN_C_A.c,548 :: 		
0x017E	0xD008      	BRA         L_CANWrite24
L_CANWrite23:
;__Lib_CAN_C_A.c,550 :: 		
0x0180	0xB720      	BTFSC       TXB2CON, 3, 1
0x0182	0xD004      	BRA         L_CANWrite25
;__Lib_CAN_C_A.c,552 :: 		
0x0184	0x0EF1      	MOVLW       241
0x0186	0x166F      	ANDWF       CANCON, 1 
;__Lib_CAN_C_A.c,553 :: 		
0x0188	0x846F      	BSF         CANCON, 2 
;__Lib_CAN_C_A.c,554 :: 		
0x018A	0xD002      	BRA         L_CANWrite26
L_CANWrite25:
;__Lib_CAN_C_A.c,559 :: 		
0x018C	0x6A00      	CLRF        R0 
0x018E	0xD045      	BRA         L_end_CANWrite
;__Lib_CAN_C_A.c,560 :: 		
L_CANWrite26:
;__Lib_CAN_C_A.c,561 :: 		
L_CANWrite24:
;__Lib_CAN_C_A.c,562 :: 		
L_CANWrite22:
;__Lib_CAN_C_A.c,569 :: 		
0x0190	0x0E03      	MOVLW       3
0x0192	0x144F      	ANDWF       FARG_CANWrite_CAN_TX_MSG_FLAGS, 0 
0x0194	0x6E60      	MOVWF       RXB0CON 
;__Lib_CAN_C_A.c,573 :: 		
0x0196	0xB64F      	BTFSC       FARG_CANWrite_CAN_TX_MSG_FLAGS, 3 
0x0198	0xD010      	BRA         L_CANWrite27
;__Lib_CAN_C_A.c,574 :: 		
0x019A	0x0E61      	MOVLW       RXB0SIDH
0x019C	0x6E53      	MOVWF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr 
0x019E	0x0E0F      	MOVLW       hi_addr(RXB0SIDH)
0x01A0	0x6E54      	MOVWF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1 
0x01A2	0xF055C048  	MOVFF       FARG_CANWrite_id, FARG___Lib_CAN_C_A_CANIDToRegs_val
0x01A6	0xF056C049  	MOVFF       FARG_CANWrite_id+1, FARG___Lib_CAN_C_A_CANIDToRegs_val+1
0x01AA	0xF057C04A  	MOVFF       FARG_CANWrite_id+2, FARG___Lib_CAN_C_A_CANIDToRegs_val+2
0x01AE	0xF058C04B  	MOVFF       FARG_CANWrite_id+3, FARG___Lib_CAN_C_A_CANIDToRegs_val+3
0x01B2	0x0EF7      	MOVLW       247
0x01B4	0x6E59      	MOVWF       FARG___Lib_CAN_C_A_CANIDToRegs_CAN_CONFIG_FLAGS 
0x01B6	0xDF54      	RCALL       __Lib_CAN_C_A_CANIDToRegs
0x01B8	0xD00F      	BRA         L_CANWrite28
L_CANWrite27:
;__Lib_CAN_C_A.c,576 :: 		
0x01BA	0x0E61      	MOVLW       RXB0SIDH
0x01BC	0x6E53      	MOVWF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr 
0x01BE	0x0E0F      	MOVLW       hi_addr(RXB0SIDH)
0x01C0	0x6E54      	MOVWF       FARG___Lib_CAN_C_A_CANIDToRegs_ptr+1 
0x01C2	0xF055C048  	MOVFF       FARG_CANWrite_id, FARG___Lib_CAN_C_A_CANIDToRegs_val
0x01C6	0xF056C049  	MOVFF       FARG_CANWrite_id+1, FARG___Lib_CAN_C_A_CANIDToRegs_val+1
0x01CA	0xF057C04A  	MOVFF       FARG_CANWrite_id+2, FARG___Lib_CAN_C_A_CANIDToRegs_val+2
0x01CE	0xF058C04B  	MOVFF       FARG_CANWrite_id+3, FARG___Lib_CAN_C_A_CANIDToRegs_val+3
0x01D2	0x0EFF      	MOVLW       255
0x01D4	0x6E59      	MOVWF       FARG___Lib_CAN_C_A_CANIDToRegs_CAN_CONFIG_FLAGS 
0x01D6	0xDF44      	RCALL       __Lib_CAN_C_A_CANIDToRegs
L_CANWrite28:
;__Lib_CAN_C_A.c,578 :: 		
0x01D8	0xFF65C04E  	MOVFF       FARG_CANWrite_DataLen, RXB0DLC
;__Lib_CAN_C_A.c,580 :: 		
0x01DC	0xAC4F      	BTFSS       FARG_CANWrite_CAN_TX_MSG_FLAGS, 6 
;__Lib_CAN_C_A.c,581 :: 		
0x01DE	0x8C65      	BSF         RXB0DLC, 6 
L_CANWrite29:
;__Lib_CAN_C_A.c,585 :: 		
0x01E0	0x0E66      	MOVLW       RXB0D0
0x01E2	0x6E51      	MOVWF       CANWrite_ptr_L0 
0x01E4	0x0E0F      	MOVLW       hi_addr(RXB0D0)
0x01E6	0x6E52      	MOVWF       CANWrite_ptr_L0+1 
;__Lib_CAN_C_A.c,586 :: 		
0x01E8	0x6A50      	CLRF        CANWrite_i_L0 
;__Lib_CAN_C_A.c,587 :: 		
L_CANWrite30:
0x01EA	0x504E      	MOVF        FARG_CANWrite_DataLen, 0 
0x01EC	0x5C50      	SUBWF       CANWrite_i_L0, 0 
0x01EE	0xE210      	BC          L_CANWrite31
;__Lib_CAN_C_A.c,588 :: 		
0x01F0	0x5050      	MOVF        CANWrite_i_L0, 0 
0x01F2	0x2451      	ADDWF       CANWrite_ptr_L0, 0 
0x01F4	0x6EE1      	MOVWF       FSR1 
0x01F6	0x0E00      	MOVLW       0
0x01F8	0x2052      	ADDWFC      CANWrite_ptr_L0+1, 0 
0x01FA	0x6EE2      	MOVWF       FSR1H 
0x01FC	0x5050      	MOVF        CANWrite_i_L0, 0 
0x01FE	0x244C      	ADDWF       FARG_CANWrite_data_, 0 
0x0200	0x6EE9      	MOVWF       FSR0 
0x0202	0x0E00      	MOVLW       0
0x0204	0x204D      	ADDWFC      FARG_CANWrite_data_+1, 0 
0x0206	0x6EEA      	MOVWF       FSR0H 
0x0208	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_CAN_C_A.c,589 :: 		
0x020C	0x2A50      	INCF        CANWrite_i_L0, 1 
;__Lib_CAN_C_A.c,590 :: 		
0x020E	0xD7ED      	BRA         L_CANWrite30
L_CANWrite31:
;__Lib_CAN_C_A.c,600 :: 		
0x0210	0x8660      	BSF         RXB0CON, 3 
;__Lib_CAN_C_A.c,606 :: 		
0x0212	0x0EF1      	MOVLW       241
0x0214	0x166F      	ANDWF       CANCON, 1 
;__Lib_CAN_C_A.c,608 :: 		
0x0216	0x0EFF      	MOVLW       255
0x0218	0x6E00      	MOVWF       R0 
;__Lib_CAN_C_A.c,609 :: 		
L_end_CANWrite:
0x021A	0x0012      	RETURN      0
; end of _CANWrite
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x021C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x021E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0222	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0224	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0226	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0228	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x022A	0x0012      	RETURN      0
; end of ___CC2DW
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x022C	0x0E00      	MOVLW       0
0x022E	0xBA9E      	BTFSC       PIR1, 5 
0x0230	0x0E01      	MOVLW       1
0x0232	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x0234	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_setup:
;BMSToucan.c,289 :: 		void setup()
;BMSToucan.c,292 :: 		TRISA = 0; // default PORTA to output
0x0236	0x6A92      	CLRF        TRISA 
;BMSToucan.c,293 :: 		TRISB = 0; // default PORTB to output
0x0238	0x6A93      	CLRF        TRISB 
;BMSToucan.c,294 :: 		TRISC = 0; // default PORTC to output
0x023A	0x6A94      	CLRF        TRISC 
;BMSToucan.c,297 :: 		INTCON.GIE = 1;    // enable global interrupts
0x023C	0x8EF2      	BSF         INTCON, 7 
;BMSToucan.c,298 :: 		INTCON.PEIE = 1;   // enable peripheral interrupts
0x023E	0x8CF2      	BSF         INTCON, 6 
;BMSToucan.c,299 :: 		INTCON.TMR0IE = 1; // enable timer 0 interrupts to control
0x0240	0x8AF2      	BSF         INTCON, 5 
;BMSToucan.c,301 :: 		INTCON2.RBPU = 1;  // disable pull ups on PORTB
0x0242	0x8EF1      	BSF         INTCON2, 7 
;BMSToucan.c,302 :: 		INTCON2.INTEDG0 = 1; // interrupt INT0 on rising edge
0x0244	0x8CF1      	BSF         INTCON2, 6 
;BMSToucan.c,303 :: 		INTCON2.INTEDG1 = 1; // interrupt INT1 on rising edge
0x0246	0x8AF1      	BSF         INTCON2, 5 
;BMSToucan.c,304 :: 		INTCON2.TMR0IP = 1; // TMR0 interrupts are high priority
0x0248	0x84F1      	BSF         INTCON2, 2 
;BMSToucan.c,305 :: 		INTCON3.INT2IE = 0; // disable INT2
0x024A	0x98F0      	BCF         INTCON3, 4 
;BMSToucan.c,306 :: 		INTCON3.INT1IE = 1; // enable INT1
0x024C	0x86F0      	BSF         INTCON3, 3 
;BMSToucan.c,307 :: 		INTCON.INT0IE = 1; // enable INT0
0x024E	0x88F2      	BSF         INTCON, 4 
;BMSToucan.c,327 :: 		T0CON.TMR0ON = 1; // turn on timer 0
0x0250	0x8ED5      	BSF         T0CON, 7 
;BMSToucan.c,328 :: 		T0CON.T08BIT = 0; // set up as a 16 bit timer
0x0252	0x9CD5      	BCF         T0CON, 6 
;BMSToucan.c,329 :: 		T0CON.T0CS = 0; // use CLK0 as the timing signal
0x0254	0x9AD5      	BCF         T0CON, 5 
;BMSToucan.c,330 :: 		T0CON.PSA = 0; // do not use the prescaler
0x0256	0x96D5      	BCF         T0CON, 3 
;BMSToucan.c,331 :: 		T0CON.T0PS2 = 1; // set the prescaler to 1:256
0x0258	0x84D5      	BSF         T0CON, 2 
;BMSToucan.c,332 :: 		T0CON.T0PS1 = 1; // this gives us an overflow of TMR0 every 0xFFFF * 256
0x025A	0x82D5      	BSF         T0CON, 1 
;BMSToucan.c,333 :: 		T0CON.T0PS0 = 1; // clock cycles (at 20Mhz)
0x025C	0x80D5      	BSF         T0CON, 0 
;BMSToucan.c,339 :: 		tx_counter = 0; // reset the transmit counter
0x025E	0x6A39      	CLRF        _tx_counter 
0x0260	0x6A3A      	CLRF        _tx_counter+1 
;BMSToucan.c,340 :: 		flag_ovp = 0; // no ovp problem
0x0262	0x6A43      	CLRF        _flag_ovp 
;BMSToucan.c,341 :: 		flag_lvp = 0; // no lvp problem
0x0264	0x6A45      	CLRF        _flag_lvp 
;BMSToucan.c,342 :: 		flag_check_bms = 0; // don't check BMS
0x0266	0x6A44      	CLRF        _flag_check_bms 
;BMSToucan.c,343 :: 		flag_send_can = 0; // no can messages to send yet
0x0268	0x6A19      	CLRF        _flag_send_can 
;BMSToucan.c,344 :: 		current_cell = 1; // start by querying cell #1
0x026A	0x0E01      	MOVLW       1
0x026C	0x6E17      	MOVWF       _current_cell 
0x026E	0x0E00      	MOVLW       0
0x0270	0x6E18      	MOVWF       _current_cell+1 
;BMSToucan.c,346 :: 		}
L_end_setup:
0x0272	0x0012      	RETURN      0
; end of _setup
_reset_candata:
;BMSToucan.c,275 :: 		void reset_candata()
;BMSToucan.c,278 :: 		for (i = 0; i < 8; i++)
0x0274	0x6A01      	CLRF        R1 
0x0276	0x6A02      	CLRF        R2 
L_reset_candata19:
0x0278	0x0E80      	MOVLW       128
0x027A	0x1802      	XORWF       R2, 0 
0x027C	0x6E00      	MOVWF       R0 
0x027E	0x0E80      	MOVLW       128
0x0280	0x5C00      	SUBWF       R0, 0 
0x0282	0xE102      	BNZ         L__reset_candata29
0x0284	0x0E08      	MOVLW       8
0x0286	0x5C01      	SUBWF       R1, 0 
L__reset_candata29:
0x0288	0xE20A      	BC          L_reset_candata20
;BMSToucan.c,280 :: 		CAN_data[i] = 0;
0x028A	0x0E3B      	MOVLW       _CAN_data
0x028C	0x2401      	ADDWF       R1, 0 
0x028E	0x6EE1      	MOVWF       FSR1 
0x0290	0x0E00      	MOVLW       hi_addr(_CAN_data)
0x0292	0x2002      	ADDWFC      R2, 0 
0x0294	0x6EE2      	MOVWF       FSR1H 
0x0296	0x6AE6      	CLRF        POSTINC1 
;BMSToucan.c,278 :: 		for (i = 0; i < 8; i++)
0x0298	0x4A01      	INFSNZ      R1, 1 
0x029A	0x2A02      	INCF        R2, 1 
;BMSToucan.c,281 :: 		}
0x029C	0xD7ED      	BRA         L_reset_candata19
L_reset_candata20:
;BMSToucan.c,282 :: 		}
L_end_reset_candata:
0x029E	0x0012      	RETURN      0
; end of _reset_candata
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x02A0	0xB2AC      	BTFSC       TXSTA, 1 
0x02A2	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x02A4	0x0000      	NOP
0x02A6	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x02A8	0xFFADC048  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x02AC	0x0012      	RETURN      0
; end of _UART1_Write
_main:
;BMSToucan.c,86 :: 		void main() {
;BMSToucan.c,88 :: 		setup();
0x02AE	0xDFC3      	RCALL       _setup
;BMSToucan.c,91 :: 		for(;;)
L_main0:
;BMSToucan.c,94 :: 		reset_candata();
0x02B0	0xDFE1      	RCALL       _reset_candata
;BMSToucan.c,97 :: 		if (flag_ovp) {
0x02B2	0x5243      	MOVF        _flag_ovp, 1 
0x02B4	0xA4D8      	BTFSS       STATUS, 2 
;BMSToucan.c,99 :: 		CAN_data[BMS_ERROR_BIT].B0 = 1;
0x02B6	0x8041      	BSF         _CAN_data+6, 0 
;BMSToucan.c,100 :: 		}
L_main3:
;BMSToucan.c,101 :: 		if (flag_lvp) {
0x02B8	0x5245      	MOVF        _flag_lvp, 1 
0x02BA	0xA4D8      	BTFSS       STATUS, 2 
;BMSToucan.c,103 :: 		CAN_data[BMS_ERROR_BIT].B1 = 1;
0x02BC	0x8241      	BSF         _CAN_data+6, 1 
;BMSToucan.c,104 :: 		}
L_main4:
;BMSToucan.c,107 :: 		if (flag_check_bms) {
0x02BE	0x5244      	MOVF        _flag_check_bms, 1 
0x02C0	0xE028      	BZ          L_main5
;BMSToucan.c,113 :: 		if (BMS_buffer_idx > 0)
0x02C2	0x501A      	MOVF        _BMS_buffer_idx, 0 
0x02C4	0x0800      	SUBLW       0
0x02C6	0xE208      	BC          L_main6
;BMSToucan.c,115 :: 		aborted_bms_checks++;
0x02C8	0x2A1B      	INCF        _aborted_bms_checks, 1 
;BMSToucan.c,118 :: 		if (aborted_bms_checks > MAX_BMS_CHECK_ABORTS)
0x02CA	0x501B      	MOVF        _aborted_bms_checks, 0 
0x02CC	0x080A      	SUBLW       10
0x02CE	0xE203      	BC          L_main7
;BMSToucan.c,121 :: 		CAN_data[BMS_ERROR_BIT].B2 = 1;
0x02D0	0x8441      	BSF         _CAN_data+6, 2 
;BMSToucan.c,122 :: 		aborted_bms_checks = 0;
0x02D2	0x6A1B      	CLRF        _aborted_bms_checks 
;BMSToucan.c,123 :: 		BMS_buffer_idx = 0;
0x02D4	0x6A1A      	CLRF        _BMS_buffer_idx 
;BMSToucan.c,124 :: 		}
L_main7:
;BMSToucan.c,125 :: 		} else {
0x02D6	0xD01D      	BRA         L_main8
L_main6:
;BMSToucan.c,126 :: 		aborted_bms_checks = 0; // no checks have been aborted
0x02D8	0x6A1B      	CLRF        _aborted_bms_checks 
;BMSToucan.c,129 :: 		current_cell++; // move to the next cell
0x02DA	0x4A17      	INFSNZ      _current_cell, 1 
0x02DC	0x2A18      	INCF        _current_cell+1, 1 
;BMSToucan.c,130 :: 		if(current_cell > NUMBER_OF_CELLS)
0x02DE	0x0E80      	MOVLW       128
0x02E0	0x0A00      	XORLW       0
0x02E2	0x6E00      	MOVWF       R0 
0x02E4	0x0E80      	MOVLW       128
0x02E6	0x1818      	XORWF       _current_cell+1, 0 
0x02E8	0x5C00      	SUBWF       R0, 0 
0x02EA	0xE102      	BNZ         L__main23
0x02EC	0x5017      	MOVF        _current_cell, 0 
0x02EE	0x0812      	SUBLW       18
L__main23:
0x02F0	0xE204      	BC          L_main9
;BMSToucan.c,132 :: 		current_cell = 1; // move back to the first cell
0x02F2	0x0E01      	MOVLW       1
0x02F4	0x6E17      	MOVWF       _current_cell 
0x02F6	0x0E00      	MOVLW       0
0x02F8	0x6E18      	MOVWF       _current_cell+1 
;BMSToucan.c,133 :: 		}
L_main9:
;BMSToucan.c,136 :: 		UART1_Write(BMS_QUERY_BIT_1);
0x02FA	0x0E81      	MOVLW       129
0x02FC	0x6E48      	MOVWF       FARG_UART1_Write_data_ 
0x02FE	0xDFD0      	RCALL       _UART1_Write
;BMSToucan.c,137 :: 		UART1_Write(BMS_QUERY_BIT_2);
0x0300	0x0EAA      	MOVLW       170
0x0302	0x6E48      	MOVWF       FARG_UART1_Write_data_ 
0x0304	0xDFCD      	RCALL       _UART1_Write
;BMSToucan.c,140 :: 		UART1_Write(current_cell);
0x0306	0xF048C017  	MOVFF       _current_cell, FARG_UART1_Write_data_
0x030A	0xDFCA      	RCALL       _UART1_Write
;BMSToucan.c,141 :: 		UART1_Write(current_cell);
0x030C	0xF048C017  	MOVFF       _current_cell, FARG_UART1_Write_data_
0x0310	0xDFC7      	RCALL       _UART1_Write
;BMSToucan.c,142 :: 		}
L_main8:
;BMSToucan.c,143 :: 		}
L_main5:
;BMSToucan.c,146 :: 		if(UART1_Data_ready())
0x0312	0xDF8C      	RCALL       _UART1_Data_Ready
0x0314	0x5200      	MOVF        R0, 1 
0x0316	0xE051      	BZ          L_main10
;BMSToucan.c,149 :: 		BMS_buffer[BMS_buffer_idx] = UART1_read();
0x0318	0x0E1C      	MOVLW       _BMS_buffer
0x031A	0x6E46      	MOVWF       FLOC__main 
0x031C	0x0E00      	MOVLW       hi_addr(_BMS_buffer)
0x031E	0x6E47      	MOVWF       FLOC__main+1 
0x0320	0x501A      	MOVF        _BMS_buffer_idx, 0 
0x0322	0x2646      	ADDWF       FLOC__main, 1 
0x0324	0xB0D8      	BTFSC       STATUS, 0 
0x0326	0x2A47      	INCF        FLOC__main+1, 1 
0x0328	0xDF14      	RCALL       _UART1_Read
0x032A	0xFFE1C046  	MOVFF       FLOC__main, FSR1
0x032E	0xFFE2C047  	MOVFF       FLOC__main+1, FSR1H
0x0332	0xFFE6C000  	MOVFF       R0, POSTINC1
;BMSToucan.c,150 :: 		BMS_buffer_idx++;
0x0336	0x2A1A      	INCF        _BMS_buffer_idx, 1 
;BMSToucan.c,153 :: 		if (BMS_buffer_idx == BMS_QUERY_LENGTH)
0x0338	0x501A      	MOVF        _BMS_buffer_idx, 0 
0x033A	0x0A1D      	XORLW       29
0x033C	0xE13E      	BNZ         L_main11
;BMSToucan.c,157 :: 		CAN_data[V1_bit] = ((BMS_buffer[BMS_V1_B2] << 8) &
0x033E	0xF001C020  	MOVFF       _BMS_buffer+4, R1
0x0342	0x6A00      	CLRF        R0 
;BMSToucan.c,158 :: 		BMS_buffer[BMS_V1_B1]) / 256;
0x0344	0x501F      	MOVF        _BMS_buffer+3, 0 
0x0346	0x1400      	ANDWF       R0, 0 
0x0348	0x6E03      	MOVWF       R3 
0x034A	0xF004C001  	MOVFF       R1, R4
0x034E	0x0E00      	MOVLW       0
0x0350	0x1604      	ANDWF       R4, 1 
0x0352	0xF000C004  	MOVFF       R4, R0
0x0356	0x6A01      	CLRF        R1 
0x0358	0xF03CC000  	MOVFF       R0, _CAN_data+1
;BMSToucan.c,159 :: 		CAN_data[V2_bit] = ((BMS_buffer[BMS_V2_B2] << 8) &
0x035C	0xF001C024  	MOVFF       _BMS_buffer+8, R1
0x0360	0x6A00      	CLRF        R0 
;BMSToucan.c,160 :: 		BMS_buffer[BMS_V2_B1]) / 256;
0x0362	0x5023      	MOVF        _BMS_buffer+7, 0 
0x0364	0x1400      	ANDWF       R0, 0 
0x0366	0x6E03      	MOVWF       R3 
0x0368	0xF004C001  	MOVFF       R1, R4
0x036C	0x0E00      	MOVLW       0
0x036E	0x1604      	ANDWF       R4, 1 
0x0370	0xF000C004  	MOVFF       R4, R0
0x0374	0x6A01      	CLRF        R1 
0x0376	0xF03DC000  	MOVFF       R0, _CAN_data+2
;BMSToucan.c,161 :: 		CAN_data[V3_bit] = ((BMS_buffer[BMS_V3_B2] << 8) &
0x037A	0xF001C028  	MOVFF       _BMS_buffer+12, R1
0x037E	0x6A00      	CLRF        R0 
;BMSToucan.c,162 :: 		BMS_buffer[BMS_V3_B1]) / 256;
0x0380	0x5027      	MOVF        _BMS_buffer+11, 0 
0x0382	0x1400      	ANDWF       R0, 0 
0x0384	0x6E03      	MOVWF       R3 
0x0386	0xF004C001  	MOVFF       R1, R4
0x038A	0x0E00      	MOVLW       0
0x038C	0x1604      	ANDWF       R4, 1 
0x038E	0xF000C004  	MOVFF       R4, R0
0x0392	0x6A01      	CLRF        R1 
0x0394	0xF03EC000  	MOVFF       R0, _CAN_data+3
;BMSToucan.c,163 :: 		CAN_data[V4_bit] = ((BMS_buffer[BMS_V4_B2] << 8) &
0x0398	0xF001C02C  	MOVFF       _BMS_buffer+16, R1
0x039C	0x6A00      	CLRF        R0 
;BMSToucan.c,164 :: 		BMS_buffer[BMS_V4_B1]) / 256;
0x039E	0x502B      	MOVF        _BMS_buffer+15, 0 
0x03A0	0x1400      	ANDWF       R0, 0 
0x03A2	0x6E03      	MOVWF       R3 
0x03A4	0xF004C001  	MOVFF       R1, R4
0x03A8	0x0E00      	MOVLW       0
0x03AA	0x1604      	ANDWF       R4, 1 
0x03AC	0xF000C004  	MOVFF       R4, R0
0x03B0	0x6A01      	CLRF        R1 
0x03B2	0xF03FC000  	MOVFF       R0, _CAN_data+4
;BMSToucan.c,165 :: 		flag_send_can = 0x01; // as we have received a full buffer
0x03B6	0x0E01      	MOVLW       1
0x03B8	0x6E19      	MOVWF       _flag_send_can 
;BMSToucan.c,168 :: 		}
L_main11:
;BMSToucan.c,169 :: 		}
L_main10:
;BMSToucan.c,172 :: 		if(flag_send_can == 0x01)
0x03BA	0x5019      	MOVF        _flag_send_can, 0 
0x03BC	0x0A01      	XORLW       1
0x03BE	0xE113      	BNZ         L_main12
;BMSToucan.c,175 :: 		CanWrite(CAN_ADDRESS, CAN_data, 1, SEND_FLAG);
0x03C0	0x0E88      	MOVLW       136
0x03C2	0x6E48      	MOVWF       FARG_CANWrite_id 
0x03C4	0x0E00      	MOVLW       0
0x03C6	0x6E49      	MOVWF       FARG_CANWrite_id+1 
0x03C8	0x0E00      	MOVLW       0
0x03CA	0x6E4A      	MOVWF       FARG_CANWrite_id+2 
0x03CC	0x0E00      	MOVLW       0
0x03CE	0x6E4B      	MOVWF       FARG_CANWrite_id+3 
0x03D0	0x0E3B      	MOVLW       _CAN_data
0x03D2	0x6E4C      	MOVWF       FARG_CANWrite_data_ 
0x03D4	0x0E00      	MOVLW       hi_addr(_CAN_data)
0x03D6	0x6E4D      	MOVWF       FARG_CANWrite_data_+1 
0x03D8	0x0E01      	MOVLW       1
0x03DA	0x6E4E      	MOVWF       FARG_CANWrite_DataLen 
0x03DC	0x0EFC      	MOVLW       252
0x03DE	0x6E4F      	MOVWF       FARG_CANWrite_CAN_TX_MSG_FLAGS 
0x03E0	0xDEC1      	RCALL       _CANWrite
;BMSToucan.c,178 :: 		BMS_buffer_idx = 0;
0x03E2	0x6A1A      	CLRF        _BMS_buffer_idx 
;BMSToucan.c,179 :: 		flag_send_can = 0x00;
0x03E4	0x6A19      	CLRF        _flag_send_can 
;BMSToucan.c,180 :: 		}
L_main12:
;BMSToucan.c,181 :: 		}
0x03E6	0xD764      	BRA         L_main0
;BMSToucan.c,182 :: 		}
L_end_main:
0x03E8	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [88]    _ISR
0x0060     [242]    __Lib_CAN_C_A_CANIDToRegs
0x0152      [18]    _UART1_Read
0x0164     [184]    _CANWrite
0x021C      [16]    ___CC2DW
0x022C      [10]    _UART1_Data_Ready
0x0236      [62]    _setup
0x0274      [44]    _reset_candata
0x02A0      [14]    _UART1_Write
0x02AE     [316]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    R0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    R1
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [2]    reset_candata_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    __Lib_CAN_C_A_CANIDToRegs_loVal_L0
0x0003       [1]    MM_Init_i_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0004       [1]    __Lib_CAN_C_A_CANIDToRegs_hiVal_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    __Lib_CAN_C_A_CANIDToRegs_hrVal_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    __Lib_CAN_C_A_CANIDToRegs_hsVal_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000C       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0017       [2]    _current_cell
0x0019       [1]    _flag_send_can
0x001A       [1]    _BMS_buffer_idx
0x001B       [1]    _aborted_bms_checks
0x001C      [29]    _BMS_buffer
0x0039       [2]    _tx_counter
0x003B       [8]    _CAN_data
0x0043       [1]    _flag_ovp
0x0044       [1]    _flag_check_bms
0x0045       [1]    _flag_lvp
0x0046       [2]    FLOC__main
0x0048       [1]    FARG_UART1_Write_data_
0x0048       [4]    FARG_CANWrite_id
0x004C       [2]    FARG_CANWrite_data_
0x004E       [1]    FARG_CANWrite_DataLen
0x004F       [1]    FARG_CANWrite_CAN_TX_MSG_FLAGS
0x0050       [1]    CANWrite_i_L0
0x0051       [2]    CANWrite_ptr_L0
0x0053       [2]    FARG___Lib_CAN_C_A_CANIDToRegs_ptr
0x0055       [4]    FARG___Lib_CAN_C_A_CANIDToRegs_val
0x0059       [1]    FARG___Lib_CAN_C_A_CANIDToRegs_CAN_CONFIG_FLAGS
0x0F20       [1]    TXB2CON
0x0F30       [1]    TXB1CON
0x0F40       [1]    TXB0CON
0x0F60       [1]    RXB0CON
0x0F61       [1]    RXB0SIDH
0x0F65       [1]    RXB0DLC
0x0F66       [1]    RXB0D0
0x0F6F       [1]    CANCON
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FD5       [1]    T0CON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_ISR13
  L_ISR14
  L_ISR15
  L_ISR16
  L_ISR17
  L_ISR18
  L_reset_candata19
  L_reset_candata20
  L_reset_candata21
  L_end_main
  _main
  L__main23
  L_end_ISR
  _ISR
  L__ISR25
  L__ISR26
  L_end_CANbus_setup
  _CANbus_setup
  L_end_reset_candata
  _reset_candata
  L__reset_candata29
  L_end_setup
  _setup
  L___Lib_CAN_C_A_CANIDToRegs0
  L___Lib_CAN_C_A_CANIDToRegs1
  L_CANSetOperationMode2
  L_CANSetOperationMode3
  L_CANSetOperationMode4
  L_CANSetOperationMode5
  L_CANSetBaudRate6
  L_CANSetBaudRate7
  L_CANSetBaudRate8
  L_CANSetMask9
  L_CANSetMask10
  L_CANSetFilter11
  L_CANSetFilter12
  L_CANSetFilter13
  L_CANSetFilter14
  L_CANSetFilter15
  L_CANSetFilter16
  L_CANSetFilter17
  L_CANSetFilter18
  L___Lib_CAN_C_A_RegsToCANID19
  L___Lib_CAN_C_A_RegsToCANID20
  L_CANWrite21
  L_CANWrite22
  L_CANWrite23
  L_CANWrite24
  L_CANWrite25
  L_CANWrite26
  L_CANWrite27
  L_CANWrite28
  L_CANWrite29
  L_CANWrite30
  L_CANWrite31
  L_CANRead32
  L_CANRead33
  L_CANRead34
  L_CANRead35
  L_CANRead36
  L_CANRead37
  L_CANRead38
  L_CANRead39
  L_CANRead40
  L_CANRead41
  L_CANRead42
  L_CANRead43
  L_CANRead44
  L_CANRead45
  L_CANRead46
  L_CANRead47
  L_CANInitialize48
  L_CANInitialize49
  L_CANInitialize50
  L_CANInitialize51
  L_CANInitialize52
  L_CANInitialize53
  L_end_CANIDToRegs
  __Lib_CAN_C_A_CANIDToRegs
  L___Lib_CAN_C_A_CANIDToRegs55
  L___Lib_CAN_C_A_CANIDToRegs56
  L___Lib_CAN_C_A_CANIDToRegs57
  L___Lib_CAN_C_A_CANIDToRegs58
  L___Lib_CAN_C_A_CANIDToRegs59
  L___Lib_CAN_C_A_CANIDToRegs60
  L_end_CANSetOperationMode
  _CANSetOperationMode
  L_end_CANGetOperationMode
  _CANGetOperationMode
  L_end_CANSetBaudRate
  _CANSetBaudRate
  L__CANSetBaudRate64
  L__CANSetBaudRate65
  L_end_CANSetMask
  _CANSetMask
  L_end_CANSetFilter
  _CANSetFilter
  L_end_RegsToCANID
  __Lib_CAN_C_A_RegsToCANID
  L___Lib_CAN_C_A_RegsToCANID69
  L___Lib_CAN_C_A_RegsToCANID70
  L___Lib_CAN_C_A_RegsToCANID71
  L___Lib_CAN_C_A_RegsToCANID72
  L___Lib_CAN_C_A_RegsToCANID73
  L___Lib_CAN_C_A_RegsToCANID74
  L___Lib_CAN_C_A_RegsToCANID75
  L___Lib_CAN_C_A_RegsToCANID76
  L_end_CANWrite
  _CANWrite
  L_end_CANRead
  _CANRead
  L_end_CANInitialize
  _CANInitialize
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_ISR13
  L_ISR14
  L_ISR15
  L_ISR16
  L_ISR17
  L_ISR18
  L_reset_candata19
  L_reset_candata20
  L_reset_candata21
  L_end_main
  _main
  L__main23
  L_end_ISR
  _ISR
  L__ISR25
  L__ISR26
  L_end_CANbus_setup
  _CANbus_setup
  L_end_reset_candata
  _reset_candata
  L__reset_candata29
  L_end_setup
  _setup
